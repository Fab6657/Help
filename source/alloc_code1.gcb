        ' Chip Settings and preamble
        #CHIP  18F27Q43
        #OPTION EXPLICIT


        'Generated by PIC PPS Tool for Great Cow Basic - this explicit to a specific chip
        #startup InitPPS, 85
        #define PPSToolPart 18f27q43

        Sub InitPPS

                'Module: UART pin directions
                Dir PORTC.6 Out    ' Make TX1 pin an output
                'Module: UART1
                RC6PPS = 0x0020    'TX1 > RC6

        End Sub
        'Template comment at the end of the config file

        ' USART settings for USART1
        #DEFINE USART_BAUD_RATE 9600
        #DEFINE USART_TX_BLOCKING
        #DEFINE USART_DELAY 0

        '---------------------------
        ' Main Program

        #DEFINE BUFFERSIZE 256  ' gives range of 0 to 255

        'DIMension an ArrayVariant using ALLOC to create an ArrayVariant with the size of BUFFERSIZE.
        'This array is created at memory location 0x2400. 
        'This memory location is specific to this chip ( you must ensure other microcontrollers address are valid).

        Dim mybuffer1 as ALLOC * BUFFERSIZE at 0x2400

        'A data table
        Table myDataTable
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
            0,1,2,3,4,5,6,7,8,9,0x0A,0X0B,0X0C,0X0D,0X0E,0X0F
        End Table

        Dim iLoop, tableDataValue, memoryDataValue as byte

        'These varaibles are ONLY used to demonstrate the showing of the allocated memory address
        Dim mybuffer1startaddress, mybuffer1endaddress as word 
        
        mybuffer1startaddress = @mybuffer1
        mybuffer1endaddress = mybuffer1startaddress + BUFFERSIZE - 1


        HSerPrintCRLF 2
        HSerPrint "Buffer test - 256 bytes "
        HSerPrint " at address: 0x"
        HSerPrint hex( mybuffer1startaddress_h )
        HSerPrint hex( mybuffer1startaddress )
        HSerPrint " to 0x"
        HSerPrint hex( mybuffer1endaddress_h )
        HSerPrint hex( mybuffer1endaddress )
        HSerPrintCRLF 2

        'Load buffer with table data
        for iLoop = 0 to 255
            ReadTable myDataTable, [word]iLoop+1, tableDataValue
            mybuffer1( iLoop ) = tableDataValue
        next

        wait 100 ms

        HserPrint "Print dataDump array to serial terminal"
        HSerPrintCRLF
        for iLoop = 0 to 255
            HSerPrint leftpad(str( myBuffer1(iLoop)),3)
            If iLoop % 16 = 15 Then HSerPrintCRLF
        next

        Wait 100 ms
        HSerPrintCRLF
        HserPrint "Print memory to serial terminal using PEEK to get the memory location byte value"
        HSerPrintCRLF
        for iLoop = 0 to 255
            memoryDataValue = PEEK ( @myBuffer1+iLoop )
            HSerPrint leftpad(str( memoryDataValue ) ,3)
            If iLoop % 16 = 15 Then HSerPrintCRLF
        next
        HSerPrintCRLF
        Wait 100 ms
